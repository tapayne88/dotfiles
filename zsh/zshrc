export ZSH_HOME=~/.zsh

export VISUAL=nvim
export EDITOR=nvim

# executable search path
PATHS=(/usr/local/bin $HOME/.local/bin /home/linuxbrew/.linuxbrew/bin $HOME/Library/Python/3.7/bin)
for p in $PATHS; do
  if (test -d $p); then
    export PATH="$p:$PATH"
  fi
done

# Setup DEFAULT_USER for the theme
USER=`whoami`
if [ $USER = 'tapayne88' ] ||
   [ $USER = 'tpayne' ] ||
   [ $USER = 'tpa11' ]; then
    DEFAULT_USER=$USER
fi

# Disables scroll lock shortcut (Ctrl+s)
stty -ixon
KEYTIMEOUT=1

# function sourceOPSession {
#   echo "here!"
#   if (test -e $OP_TMUX_TOKEN_FILE); then
#     echo "he"
#     export OP_SESSION_my=$(cat $OP_TMUX_TOKEN_FILE)
#   fi
# }

# function opsignin {
#   sourceOPSession
#   if (! test -e $OP_TMUX_TOKEN_FILE); then
#     op signin my --output=raw | tee $OP_TMUX_TOKEN_FILE
#     sourceOPSession
#   fi
# }

# sourceOPSession

# fzf defaults
export FZF_DEFAULT_COMMAND="ag --nocolor -g ''"
export FZF_TMUX=1
export FZF_TMUX_HEIGHT="40%"
export FZF_LEGACY_KEYBINDINGS=0

export FZF_DEFAULT_OPTS="\
  --layout reverse \
  --color bg+:0,hl:0,hl+:4,fg:7,fg+:15,header:4,info:4,marker:4,pointer:4,prompt:4,spinner:4 \
"

# Prevent FFP opening multiple splits
export FPP_DISABLE_SPLIT=1

approvedTerminal=$(test "$TERM_PROGRAM" = "iTerm.app" -o "$TERM_PROGRAM" = "gnome-terminal")
if (test -z "$SSH_CLIENT" -a -z "$SSH_TTY" -a $approvedTerminal); then
  export MYTMUX $(which tmux)
  export TMUXP_CONFIGDIR "$HOME/.tmuxp"
  # Start tmux at start of each session (only when local and tmux exists)
  if (test -n "$MYTMUX" -a $TERM != "screen" -a -z "$TMUX"); then
    tmux > /dev/null 2>&1
  fi
fi

source ~/.zplug/init.zsh

zplug "~/.zsh/themes",                    from:local,     as:theme, use:kipper.zsh-theme
zplug "zsh-users/zsh-autosuggestions",    from:github
zplug "plugins/brew",                     from:oh-my-zsh
zplug "plugins/common-aliases",           from:oh-my-zsh
zplug "plugins/history-substring-search", from:oh-my-zsh

zplug load

LOCAL_RC=~/.zshrc.local
if [ -e $LOCAL_RC ]; then
  source $LOCAL_RC
fi
