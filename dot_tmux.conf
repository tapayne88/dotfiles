# vi: filetype=tmux
set -g history-limit 10000
set -g base-index 1
set -sg escape-time 0
set -g allow-rename off
set -g default-terminal "tmux-256color"
set -g default-command ""
set -sa terminal-overrides ',xterm-256color:RGB'

# Source local config file - if it exists
source-file -q "$HOME/.tmux.local.conf"

# New window at current path
bind > new-window -c "#{pane_current_path}"

# Run commands across all panes
bind a set-window-option synchronize-panes

# Pane layout options
bind ! select-layout even-vertical      # Shift + 1
bind @ select-layout even-horizontal    # Shift + 2

# Toggle mouse on
bind-key M \
  set-option -g mouse on \;\
  display-message 'Mouse: ON'

# Toggle mouse off
bind-key m \
  set-option -g mouse off \;\
  display-message 'Mouse: OFF'

# vi mode
set-window-option -g mode-keys vi
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection

# Window navigation (mac like replaces iTerms tab navigation)
bind -n "M-{" prev            # Send HEX Code: 0x02 0x70
bind -n "M-}" next            # Send HEX Code: 0x02 0x6E

# Fullscreen pane toggle
bind -n C-X resize-pane -Z

# Swap panes around
bind C-s \
  display "Select pane to swap with..." \; \
  display-pane -d 5000 "swap-pane -t '%%'"

# Swap current pane with last pane
bind C-o select-pane -l \; swap-pane -s '!'

# keybindings to make resizing easier
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Colors
set -g status-style fg=white,bg=black
set -g pane-border-style fg=brightblack,bg=black
set -g pane-active-border-style fg=brightblack,bg=black
set -g display-panes-colour black
set -g display-panes-active-colour brightblack
setw -g clock-mode-colour cyan
set -g message-style fg=cyan,bg=brightblack
set -g message-command-style fg=cyan,bg=brightblack

# Status bar
set -g status on
set -g status-left-length 15
if-shell '[ $TERM_EMU = "kitty" ]' {
  set -g status-left "#[fg=black,bg=blue,bold]  #S "
  set -g status-right "#{prefix_highlight}#[fg=black,bg=brightblack]#[fg=white,bg=brightblack,nobold,noitalics,nounderscore] %a %d-%m-%Y #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]/#[fg=white,bg=brightblack] %H:%M  #[fg=brightblack,bg=cyan]#[fg=black,bg=cyan] #H #{?#{battery_percentage},#[fg=cyan#,bg=brightblack]#[fg=yellow#,bg=brightblack] #{battery_percentage} ,}"
} {
  set -g status-left "#[fg=black,bg=blue,bold]  #S "
  set -g status-right "#{prefix_highlight}#[fg=white,bg=brightblack,nobold,noitalics,nounderscore] %a %d-%m-%Y #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]|#[fg=white,bg=brightblack] %H:%M  #[fg=black,bg=cyan] #H #{?#{battery_percentage},#[fg=yellow#,bg=brightblack] #{battery_percentage} ,}"
}

set -g status-right-length 150

# Window
set -g window-status-separator ""
if-shell '[ $TERM_EMU = "kitty" ]' {
  set -g window-status-format "#[fg=black,bg=brightblack] #[fg=white,bg=brightblack]#I  #W #[fg=black,bg=brightblack]"
  set -g window-status-current-format "#[fg=black,bg=brightblack] #[fg=white,bg=brightblack]#I #[fg=cyan,bg=brightblack]#[fg=black,bg=cyan,nobold,noitalics,nounderscore] #W [#{window_panes}] "
} {
  set -g window-status-format " #[fg=white,bg=brightblack] #I  #W "
  set -g window-status-current-format " #[fg=white,bg=brightblack] #I #[fg=black,bg=cyan,nobold,noitalics,nounderscore] #W [#{window_panes}] "
}

# Split creation
bind '|' split-window -h -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind '-' split-window -v -c "#{pane_current_path}"
bind '_' split-window -v -c "#{pane_current_path}"

# Reset pane sizes to current layout
bind '=' select-layout

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# Shortcut for jumping into scroll-mode when not in vim
bind -n C-y run "($is_vim && tmux send-keys C-y) || \
                 tmux copy-mode"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

# Provide way to clear terminal (since Ctrl-l is taken)
bind -n C-M-l run "tmux send-keys C-l"

# Reassert copy-mode key bindings, by default C-h & C-j don't work
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R

set -g @prefix_highlight_fg black
set -g @prefix_highlight_bg brightcyan
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow'
if-shell '[ $TERM_EMU = "kitty" ]' {
  set -g @prefix_highlight_output_prefix ' '
  set -g @prefix_highlight_output_suffix ' '
} {
  set -g @prefix_highlight_output_prefix ' '
  set -g @prefix_highlight_output_suffix ' '
}
set -g @prefix_highlight_prefix_prompt '^b'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'copy'

# Filter for cli tags - without below, default filtering excludes anything without a url
set -g @1password-items-jq-filter '\
  .[] \
  | [select(.overview.tags | map(select(. == "cli")) | length == 1)?] \
  | map([ .overview.title, .uuid ] \
  | join(",")) \
  | .[] \
'

set -g @fingers-key 'c-f'
set -g @fingers-compact-hints 0

set -g focus-events on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'yardnsm/tmux-1password'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'Morantron/tmux-fingers'

run '~/.tmux/plugins/tpm/tpm'
