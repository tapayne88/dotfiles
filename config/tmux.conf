set -g history-limit 100000
set -g base-index 1
set -sg escape-time 0
set-option -g allow-rename off
set -g default-terminal "tmux-256color"

# New window at current path
bind-key > new-window -c "#{pane_current_path}"

# Run commands across all panes
bind-key a set-window-option synchronize-panes

# Pane layout options
bind-key ! select-layout even-vertical      # Shift + 1
bind-key @ select-layout even-horizontal    # Shift + 2

# vi mode
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Window navigation (mac like replaces iTerms tab navigation)
bind -n M-{ prev            # Send HEX Code: 0x02 0x70
bind -n M-} next            # Send HEX Code: 0x02 0x6E

# Fullscreen pane toggle
bind -n C-X resize-pane -Z

# keybindings to make resizing easier
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Window styling
set -g window-style "fg=default,bg=colour18"
set -g window-active-style "fg=default,bg=colour0"

# Panes
set -g pane-border-bg colour18
set -g pane-border-fg colour3
set -g pane-active-border-bg colour18
set -g pane-active-border-fg colour3

# Powerline inspired theme
set -g status-bg default
set -g status-right-length 152
set -g status-left '#[fg=colour00,bg=colour06] #S '
set -g window-status-separator ''	# remove space between window titles
set -g window-status-format "#[fg=colour03] #I | #W (#{window_panes}) "
set -g window-status-current-format "#[fg=colour15,bg=colour08] #I | #W (#{window_panes}) "

# Split creation
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# if a battery is present, show power remaining
HAS_BATTERY="source ~/.tmux/plugins/tmux-battery/scripts/helpers.sh; battery_status"
STATUS_RIGHT_BASIC="#[fg=colour00,bg=colour06] %H:%M #[fg=colour00,bg=colour07]Â %d-%a-%y "
STATUS_RIGHT_WITH_BATTERY="$STATUS_RIGHT_BASIC #[fg=colour03,bg=colour19] #{battery_percentage} "
if-shell "$HAS_BATTERY" 'set -g status-right $STATUS_RIGHT_WITH_BATTERY' 'set -g status-right $STATUS_RIGHT_BASIC'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'yardnsm/tmux-1password'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-battery'

run '~/.tmux/plugins/tpm/tpm'
