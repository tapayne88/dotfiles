# vi: filetype=nix
{ config, pkgs, ... }:

let
  unstable = import <nixpkgs-unstable> { config = config; };
  comma = import ( pkgs.fetchFromGitHub {
      owner = "Shopify";
      repo = "comma";
      rev = "4a62ec17e20ce0e738a8e5126b4298a73903b468";
      sha256 = "0n5a3rnv9qnnsrl76kpi6dmaxmwj1mpdd2g0b4n1wfimqfaz6gi1";
  }) {};

  {{- if ne "macOS" .ostype }}
  unixPkgs = with pkgs; [
    nq
  ];
  {{- else }}
  unixPkgs = [];
  {{- end }}

  {{- if eq "macOS" .ostype }}
  darwinPkgs = with pkgs; [
    coreutils
    gnugrep
    gnused
    # reattach-to-user-namespace needed for MacOS when running programs within
    # tmux. This was the original problem
    # https://github.com/tmux/tmux/issues/600
    reattach-to-user-namespace
  ];
  {{- else }}
  darwinPkgs = [];
  {{- end }}

  {{- if eq "crostini" .ostype }}
  crostiniPkgs = with pkgs; [
    alacritty
    kitty
    mesa_drivers
  ];
  {{- else }}
  crostiniPkgs = [];
  {{- end }}

in

{
  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;

  # Home Manager needs a bit of information about you and the
  # paths it should manage.
  home.username = "{{ .chezmoi.username }}";
  home.homeDirectory = "{{ .chezmoi.homedir }}";

  # This value determines the Home Manager release that your
  # configuration is compatible with. This helps avoid breakage
  # when a new Home Manager release introduces backwards
  # incompatible changes.
  #
  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "20.09";

  {{- if ne "macOS" .ostype }}
  # Fix I/O error with XML write - root cause unknown
  xdg.mime.enable = false;
  {{- end }}

  home.packages = with pkgs; [
    _1password
    antigen
    bat
    chezmoi
    comma
    curl
    fpp
    fzf
    gawk
    gitAndTools.diff-so-fancy
    git
    gnupg
    gti
    htop
    inetutils
    jq
    mosh
    nix-zsh-completions
    nodejs
    openssh
    python
    python27Packages.pip
    python3
    python38Packages.pip
    ripgrep
    silver-searcher
    screenfetch
    tmux
    tmuxp
    tree
    unixtools.watch
    vim
    watchman
    wget
    yarn
    zsh

    # Unstable Packages
    unstable.cargo  # needed newer version of rust to compile vim-clap binary
  ] ++ darwinPkgs ++ crostiniPkgs ++ unixPkgs;

  programs.neovim = {
    enable = true;
    viAlias = true;
    withNodeJs = true;
  };
}
