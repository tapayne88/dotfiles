# vi: filetype=nix
{ config, pkgs, ... }:

let
  comma = import ( pkgs.fetchFromGitHub {
      owner = "Shopify";
      repo = "comma";
      rev = "4a62ec17e20ce0e738a8e5126b4298a73903b468";
      sha256 = "0n5a3rnv9qnnsrl76kpi6dmaxmwj1mpdd2g0b4n1wfimqfaz6gi1";
  }) {};

  {{- if eq "darwin" .chezmoi.os }}
  darwinPkgs = with pkgs; [
    coreutils
    gnugrep
    gnused
  ];
  {{- else }}
  darwinPkgs = [];
  {{- end }}

  {{- if eq "penguin" .chezmoi.hostname }}
  crostiniPkgs = with pkgs; [
    kitty
    mesa_drivers
  ];
  {{- else }}
  crostiniPkgs = [];
  {{- end }}

in

{
  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;

  # This value determines the Home Manager release that your
  # configuration is compatible with. This helps avoid breakage
  # when a new Home Manager release introduces backwards
  # incompatible changes.
  #
  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "20.03";

  {{- if ne "darwin" .chezmoi.os }}
  # Fix I/O error with XML write - root cause unknown
  xdg.mime.enable = false;
  {{- end }}

  home.packages = with pkgs; [
    _1password
    antigen
    bat
    chezmoi
    comma
    curl
    fpp
    fzf
    gitAndTools.diff-so-fancy
    git
    gti
    htop
    inetutils
    jq
    mosh
    nix-zsh-completions
    nodejs
    openssh
    python
    python3
    ripgrep
    silver-searcher
    tmux
    tmuxp
    tree
    unixtools.watch
    vim
    watchman
    wget
    yarn
    zsh
  ] ++ darwinPkgs ++ crostiniPkgs;

  programs.neovim = {
    enable = true;
    viAlias = true;
    withNodeJs = true;
  };
}
