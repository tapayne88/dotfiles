-- Number of lines from vertical edge to start scrolling
vim.opt.scrolloff = 4

-- Better terminal color support in neovim
vim.opt.termguicolors = true

-- Better command options
vim.opt.wildmode = { 'longest:full', 'full' }
vim.opt.wildignorecase = true

vim.opt.list = true
vim.opt.listchars = {
  eol = '↵',
  tab = '󰄾 ',
  trail = '·',
}

-- Better split opening defaults
vim.opt.splitbelow = true
vim.opt.splitright = true

-- Better searching
vim.opt.ignorecase = true
vim.opt.smartcase = true

vim.opt.swapfile = false
vim.opt.hidden = true

-- Hide the default mode text (e.g. -- INSERT -- below the statusline)
vim.opt.showmode = false
vim.opt.spelllang = 'en'

-- Decrease update time
vim.opt.updatetime = 250

vim.opt.number = true
vim.opt.cursorline = true
vim.opt.signcolumn = 'yes'
vim.opt.relativenumber = true
vim.opt.splitkeep = 'screen'

vim.g.netrw_liststyle = 3

vim.g.chezmoi_source_dir = '{{ .chezmoi.sourceDir }}'

vim.opt.fillchars = {
  horiz = '━',
  horizup = '┻',
  horizdown = '┳',
  vert = '┃',
  vertleft = '┫',
  vertright = '┣',
  verthoriz = '╋',
  diff = '╱',
}

-- Set the default tab width to 4 spaces
vim.opt.shiftwidth = 4
vim.opt.tabstop = 4

vim.filetype.add {
  extension = {
    -- Special handling for chezmoi files (templates, etc.)
    ['tmpl'] = function(path)
      local is_chezmoi_source_dir = path:match('^' .. vim.g.chezmoi_source_dir)
        ~= nil
      local ext = path:match '.*%.(%w+)%.tmpl$'

      -- Abort if we're in a telescope prompt
      if vim.bo.filetype == 'TelescopePrompt' then
        return
      end

      if is_chezmoi_source_dir and ext ~= nil then
        vim.bo.filetype = ext
      else
        vim.bo.filetype = 'template'
      end
    end,
    ['tiltfile'] = 'python',
    ['tfvars'] = 'terraform',
  },
  filename = {
    ['Tiltfile'] = 'python',
  },
}

-- {{- if eq "crostini" .ostype }}
-- Configure vim's other clipboard registers to use xsel (system clipboard)
vim.g.clipboard = {
  name = 'crostiniClipboard',
  copy = { ['+'] = 'xsel --clipboard', ['*'] = 'xsel --clipboard' },
  paste = { ['+'] = 'xsel --clipboard', ['*'] = 'xsel --clipboard' },
  cache_enabled = 1,
}
-- {{- end }}
