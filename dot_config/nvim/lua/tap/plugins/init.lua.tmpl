-- vi: filetype=lua
vim.cmd [==[
"" ==================== Pre Plug ====================
" Only load vim-test if these commands are used
let vimTestCommands = ['TestNearest', 'TestFile', 'TestSuite', 'TestLast', 'TestVisit']

"" ==================== Vim Plug ====================
call plug#begin('~/.config/nvim/plugged')

" Core Bundles
Plug 'lervag/file-line'                     " Handle filenames with line numbers i.e. :20
Plug 'tpope/vim-fugitive'                   " Git integration ':Gstatus' etc.
Plug 'tpope/vim-characterize'               " Adds 'ga' command to show character code
Plug 'tpope/vim-commentary'                 " Adds 'gc' & 'gcc' commands for commenting lines
Plug 'tpope/vim-eunuch'                     " Adds unix commands like ':Move' etc.
Plug 'tpope/vim-surround'                   " Adds 'cs' command to change surround e.g. cs'<p> - would change 'this' => <p>this</p>
Plug 'tpope/vim-dispatch', { 'on': 'Dispatch' }                      " Async vim compiler plugins (used to run mocha test below)
Plug 'jaawerth/nrun.vim'                    " Put locally installed npm module .bin at front of path
Plug 'tpope/vim-sleuth'                     " Detect indentation
Plug 'christoomey/vim-tmux-navigator'       " Seemless vim <-> tmux navigation
Plug 'ryanoasis/vim-devicons'               " Filetype icons
Plug 'wincent/scalpel'                      " Easier find & replace
Plug 'simeji/winresizer'                    " Simple plugin to easily resize windows
Plug 'janko-m/vim-test', { 'on': vimTestCommands }                 " easy testing
Plug 'tweekmonster/startuptime.vim', { 'on': 'StartupTime' }                   " easier vim startup time profiling
Plug 'iamcco/markdown-preview.nvim', { 'do': ':call mkdp#util#install()', 'for': 'markdown', 'on': 'MarkdownPreview' }               " Markdown previewing commands
Plug 'rhysd/git-messenger.vim', { 'on': 'GitMessenger' }                  " Git blame for line with commit message
Plug 'antoinemadec/FixCursorHold.nvim'      " Fix performance issue with CursorHold events

Plug 'ChristianChiarulli/nvcode-color-schemes.vim'  " treesitter colorscheme
Plug 'nvim-treesitter/nvim-treesitter', { 'do': ':TSUpdate' }                     " better syntax highlighting
Plug 'nvim-treesitter/playground'           " playground for illustrating the AST treesitter builds
Plug 'nvim-lua/popup.nvim'                  " dependency of telescope
Plug 'nvim-lua/plenary.nvim'                " dependency of telescope
Plug 'nvim-telescope/telescope.nvim'        " whizzy command-p launcher
Plug 'kyazdani42/nvim-web-devicons'         " devicons for lua plugins
Plug 'lewis6991/gitsigns.nvim'              " + & - in column for changed lines

" Syntax not supported by treesitter
Plug 'plasticboy/vim-markdown'

{{- if .neovim_nightly_native_lsp }}
Plug 'neovim/nvim-lspconfig'                " native neovim LSP support
Plug 'kabouzeid/nvim-lspinstall'            " install LSP servers
Plug 'nvim-lua/lsp-status.nvim'             " LSP status display
Plug 'glepnir/lspsaga.nvim'                 " Better LSP diagnostics display
Plug 'nvim-lua/completion-nvim'             " Auto completion plugin for nvim
Plug 'steelsojka/completion-buffers'
Plug 'nvim-treesitter/completion-treesitter'
Plug 'hoob3rt/lualine.nvim'                 " statusline in lua
{{- else }}
Plug 'itchyny/lightline.vim'                " Status line plugin
Plug 'neoclide/coc.nvim', { 'branch': 'release' }                   " LSPish integration
{{- end }}

call plug#end()
]==]
