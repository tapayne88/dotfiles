local a = require("plenary.async")
local notify = require("notify").async
local Job = require 'plenary.job'
local nnoremap = require("tap.utils").nnoremap
local xnoremap = require("tap.utils").xnoremap
local command = require("tap.utils").command

vim.g.fugitive_dynamic_colors = 0
-- {{- if ne "" .github_enterprise_host }}
vim.g.github_enterprise_urls = {'https://{{ .github_enterprise_host }}'}
-- {{- end }}

-- Stops fugitive files being left in buffer by removing all but currently visible
vim.cmd 'autocmd BufReadPost fugitive://* set bufhidden=delete'

local parse_result = function(result, fallback)
    return #result > 0 and result or fallback
end

local git = function(args)
    return function(runtime_args)
        local title = 'git ' .. table.concat(args, " ")
        a.run(function()
            Job:new({
                command = 'git',
                args = vim.tbl_flatten({args, runtime_args}),
                on_exit = function(j, return_val)
                    a.run(function()
                        if return_val ~= 0 then
                            notify(parse_result(j:result(), "unknown error"),
                                   "error", {title = title})
                            return
                        end

                        notify(parse_result(j:result(), "success"), "info",
                               {title = title})
                    end)
                end
            }):start()
        end)
    end
end

nnoremap('<leader>ga', ':Git add %:p<CR><CR>', {description = "Git add file"})
nnoremap('<leader>gs', ':Git<CR>', {description = "Git status"})
nnoremap('<leader>gc', ':Git commit -v -q<CR>', {description = "Git commit"})
nnoremap('<leader>gt', ':Git commit -v -q %:p<CR>')
nnoremap('<leader>gd', ':Gvdiff<CR>', {description = "Git diff"})
nnoremap('<leader>ge', ':Gedit<CR>')
nnoremap('<leader>gr', ':Gread<CR>', {description = "Git read"})
nnoremap('<leader>gw', ':Gwrite<CR>', {description = "Git write"})
nnoremap('<leader>gl', ':Gclog<CR>', {description = "Git log"})
nnoremap('<leader>go', ':Git checkout<Space>', {description = "Git checkout"})
nnoremap('<leader>gps', git {'ps'}, {description = "Git push"})
nnoremap('<leader>gpl', git {'pl'}, {description = "Git pull"})
nnoremap('<leader>gp', ":GBrowse<CR>", {description = "Git browse file"})
xnoremap('<leader>gp', ":'<,'>GBrowse<CR>",
         {description = "Git browse visual selection"})

command({"Gitps", git {'ps'}, nargs = "*"})
command({"Gitpsu", git {'psu'}, nargs = "*"})
command({"Gitpsf", git {'psf'}, nargs = "*"})
command({"Gitpl", git {'pl'}, nargs = "*"})
