set -g history-limit 100000
set -g base-index 1
set -sg escape-time 0
set -g allow-rename off
set -g default-terminal "tmux-256color"
set -g default-command ""

# Source local config file - if it exists
source-file -q "$HOME/.tmux.local.conf"

# New window at current path
bind-key > new-window -c "#{pane_current_path}"

# Run commands across all panes
bind-key a set-window-option synchronize-panes

# Pane layout options
bind-key ! select-layout even-vertical      # Shift + 1
bind-key @ select-layout even-horizontal    # Shift + 2

# vi mode
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Window navigation (mac like replaces iTerms tab navigation)
bind -n M-{ prev            # Send HEX Code: 0x02 0x70
bind -n M-} next            # Send HEX Code: 0x02 0x6E

# Fullscreen pane toggle
bind -n C-X resize-pane -Z

# Swap panes around
bind C-s \
  display "Select pane to swap with..." \; \
  display-pane -d 5000 "swap-pane -t '%%'"

# keybindings to make resizing easier
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Window styling
set -g window-style "fg=default,bg=colour18"
set -g window-active-style "fg=default,bg=colour0"

# Panes
set -g pane-border-bg colour18
set -g pane-border-fg colour03
set -g pane-active-border-bg colour18
set -g pane-active-border-fg colour03

# Powerline inspired theme
set -g status-bg default
set -g status-right-length 150
set -g status-left '#[fg=colour18,bg=colour06] ‚ùê #S #[bg=colour00] '
set -g window-status-separator ' '	# remove space between window titles
set -g window-status-format "#[fg=colour08] #I | #W "
set -g window-status-current-format "#[fg=colour04,bg=colour19] #I #[fg=colour19,bg=colour04] #W (#{window_panes}) "

# Split creation
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# Shortcut for jumping into scroll-mode when not in vim
bind -n C-y run "($is_vim && tmux send-keys C-y) || \
                 tmux copy-mode"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g @prefix_highlight_fg 'white'
set -g @prefix_highlight_bg 'colour01'
set -g @prefix_highlight_output_prefix ''
set -g @prefix_highlight_output_suffix ''
set -g @prefix_highlight_prefix_prompt '^b'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour19,bg=colour11'
set -g @prefix_highlight_copy_prompt 'cp'

tmux_airline="~/.tmux/helpers/tmux-airline.sh"
set -g status-right "#{prefix_highlight}#(eval $tmux_airline `tmux display -p \"#{client_width}\"`)"

set -g status-interval 1
set -g focus-events on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'yardnsm/tmux-1password'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'sudermanjr/tmux-kube'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'

run '~/.tmux/plugins/tpm/tpm'
