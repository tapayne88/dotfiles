[user]
  name = Tom Payne
  # default to personal email
  email = {{ .email.personal }}

# If in repo within `work` directory, use work email
[includeIf "gitdir:work/"]
  path = .gitconfig-work

[init]
  templateDir = {{ .chezmoi.sourceDir }}/git_template

[core]
  pager = less -x4

[color]
  diff = auto
  status = auto
  branch = auto
  ui = true

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = reverse bold red
  newNormal = green bold
  newHighlight = reverse bold green

[color "diff"]
  meta = white
  frag = magenta
  commit = yellow
  old = red
  new = green
  whitespace = red reverse

[pull]
  ff = only
  rebase = true

[push]
  default = current

[pretty]
  better-oneline = "format:%C(auto)%h%d %s %Cblue[%cn]"
  summary = "format:%C(yellow)%H%C(red)%d%n%C(blue)%cd %an%n%C(reset)%s%n"

[alias]
  st = status -uno
  stu = status
  cm = commit
  cma = commit --amend
  cmae = commit --amend --no-edit
  co = checkout
  pl = pull
  ft = fetch
  mg = merge
  mb = merge --no-ff --no-commit
  ch = cherry-pick
  rb = rebase
  ru = reset --hard @{u}
  inject = "!f() { set -e; HASH=`git show $1 --pretty=format:\"%H\" -q`; shift; git commit --fixup=$HASH $*; [ -n \"$(git diff-files)\" ] && git stash && DIRTY=1; git rebase $HASH^^ -i --rebase-merges --autosquash; [ -n \"$DIRTY\" ] && git stash pop;}; f"
  ps = push
  psf = push --force-with-lease
  psu = push -u
  br = branch
  df = diff
  dfc = diff --cached
  dfu = !sh -c 'git diff $0..@{u} $@' 2> /dev/null
  dt = difftool
  review = difftool @{u}
  grp = grep -I -n
  l = log --pretty=better-oneline --date='format:%Y-%m-%d %H:%M'
  lb = l origin/master..
  lu = l @{u}
  lg = log --pretty=summary --date='format:%Y-%m-%d %H:%M'
  lgb = lg origin/master..
  lgu = lg @{u}
  tree = log --pretty=better-oneline --all --graph
  prune-local = "!git branch -vv | grep -nE 'origin/.*: gone' | awk '{print $2}' | xargs git branch -D"
  git = !exec git
  alias = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
  which = "!f() { [ -n \"$1\" ] && ALIAS=`git alias | grep \"^$1\"`; [ -n \"$ALIAS\" ] && echo $ALIAS || echo \"$1 not found\"; }; f"

[diff]
  tool = fugitive
  compactionHeuristic = 1

[difftool "fugitive"]
  cmd = vim -c \"execute 'Gstatus' | wincmd p | Gvdiff ~1\" $MERGED

[merge]
  tool = splice

[bash]
  showDirtyState = true

[pager]
  show = diff-so-fancy | less
  log = diff-so-fancy | less
  diff = diff-so-fancy | less
