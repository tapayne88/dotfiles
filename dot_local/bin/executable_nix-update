#!/usr/bin/env bash

set -eEuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

usage() {
  cat << EOF # remove the space between << and EOF, this is due to web plugin issue
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] <command>

Simple script for updating nix-env and home-manager installed packages

Options:
  -h, --help      Print this help and exit
  -v, --verbose   Print script debug info
  --no-color      Suppress color generation

Commands:
  update          Update all flake inputs to latest (default command when no args)
  clean [<age>]   Run nix-clean to mark old generations for deletion - delete with nix-collect-garage (default age: 7 days)
  prune [<age>]   Run nix-clean followed by nix-collect-garage to clean up old generations (default age: 7 days)

EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  # default values of variables set from params
  flag=0
  param=''

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  return 0
}

parse_params "$@"
setup_colors

function eval_command {
  msg "${BLUE}> $1${NOFORMAT}"
  eval "$1"
}

HOME_MANAGER_HOME=$XDG_CONFIG_HOME/home-manager

############
# commands #
############

function command_clean {
  local DEFAULT_MAX_AGE_DAYS="7"

  eval_command "home-manager expire-generations -${1:-$DEFAULT_MAX_AGE_DAYS}days"
  eval_command "nix-env --delete-generations ${1:-$DEFAULT_MAX_AGE_DAYS}d"
}

function command_prune {
  command_clean "$@"
  eval_command "nix-collect-garbage"
}

function command_update {
  eval_command "nix-channel --update"
  eval_command "nix-env --install --file '<nixpkgs>' --attr nix cacert -I nixpkgs=channel:nixpkgs"
  eval_command "nix flake update $HOME_MANAGER_HOME"
  eval_command "home-manager switch"

  # If has tty attached (not being piped)
  if [ -t 1 ]; then
    echo
    read -p "Clean up old generations? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      command_prune
    fi
  fi
}

while :; do
  # default to update
  case "${args[0]-update}" in
  clean) command_clean "${args[1]-}" ;;
  update) command_update ;;
  prune) command_prune "${args[1]-}" ;;
  esac
  break
done
