#!/usr/bin/env bash

set -eEuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

usage() {
  cat << EOF # remove the space between << and EOF, this is due to web plugin issue
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] <command>

Simple script for updating nix-env and home-manager installed packages

Options:
  -h, --help      Print this help and exit
  -v, --verbose   Print script debug info
  --no-color      Suppress color generation

Commands:
  update          Update all flake inputs to latest (default command when no args)
  commit          Add and commit flake.lock changes to repo
  show            Show last commit that changed flake.lock (reverse chronological commit order)

EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  # default values of variables set from params
  flag=0
  param=''

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  return 0
}

parse_params "$@"
setup_colors

function eval_command {
  msg "${BLUE}> $1${NOFORMAT}"
  eval "$1"
}

HOME_MANAGER_HOME=$XDG_CONFIG_HOME/nixpkgs
FLAKE_LOCKFILE=$HOME_MANAGER_HOME/flake.lock
CHEZMOI_FLAKE_LOCKFILE=$(chezmoi source-path "$FLAKE_LOCKFILE")

############
# commands #
############

function command_show {
  # Find last flake.lock commit - no idea why I need to redirect git-log to a
  # file but head kept exiting non-zero!
  COMMIT=$(head -n 1 <(command git -C "{{ .chezmoi.sourceDir }}" log --branches origin/master --oneline "$CHEZMOI_FLAKE_LOCKFILE") | awk '{ print $1 }')
  command git -C "{{ .chezmoi.sourceDir }}" show "$COMMIT"
}

function command_commit {
  # Are we on the master branch, if not abort
  BRANCH_NAME="$(git -C "{{ .chezmoi.sourceDir }}" symbolic-ref HEAD 2>/dev/null)" || BRANCH_NAME="(unnamed branch)" # detached HEAD
  BRANCH_NAME=${BRANCH_NAME##refs/heads/}
  if [[ "$BRANCH_NAME" != "master" ]]; then
    die "\n${YELLOW}   dotfiles isn't on master, please commit changes manually${NOFORMAT}\n"
  fi

  # Do we have some staged changes, if so abort
  if [[ $(command git -C "{{ .chezmoi.sourceDir }}" diff --cached) != $(command git -C "{{ .chezmoi.sourceDir }}" diff --cached "$CHEZMOI_FLAKE_LOCKFILE") ]]; then
    die "\n${YELLOW}   changes staged in the git repo, please unstage them before continuing${NOFORMAT}\n"
  fi

  command git -C "{{ .chezmoi.sourceDir }}" add "$CHEZMOI_FLAKE_LOCKFILE"
  command git -C "{{ .chezmoi.sourceDir }}" commit --message "Updated flake.lock file"

  msg "\n${YELLOW}   Please push the changes from the repo${NOFORMAT}\n"
}

function command_update {
  eval_command "nix-channel --update"
  eval_command "nix-env -u"
  eval_command "nix flake update $HOME_MANAGER_HOME"
  eval_command "home-manager switch"

  command cp "$FLAKE_LOCKFILE" "$CHEZMOI_FLAKE_LOCKFILE"
  if [[ -n $(command git -C "{{ .chezmoi.sourceDir }}" status --short "$CHEZMOI_FLAKE_LOCKFILE") ]]; then
    msg "\n${YELLOW}   changes made to flake.lock, please commit them with \`nix-update commit\`${NOFORMAT}\n"
  fi

  # bug with nix neovim config writes init.vim which conflicts with my init.lua
  # https://github.com/nix-community/home-manager/issues/1907
  rm -rf "$XDG_CONFIG_HOME/nvim/init.vim"
}

while :; do
  # default to update
  case "${args[0]-update}" in
  show) command_show ;;
  commit) command_commit ;;
  update) command_update ;;
  esac
  break
done
